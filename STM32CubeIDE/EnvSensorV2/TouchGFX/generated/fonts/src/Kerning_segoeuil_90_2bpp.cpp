#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_segoeuil_90_2bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0066, -7 },  // (First char = [0x0066, f], Second char = [0x002D, -], Kerning dist = -7)
    { 0x006B, -9 },  // (First char = [0x006B, k], Second char = [0x002D, -], Kerning dist = -9)
    { 0x0072, -9 },  // (First char = [0x0072, r], Second char = [0x002D, -], Kerning dist = -9)
    { 0x0074, -8 },  // (First char = [0x0074, t], Second char = [0x002D, -], Kerning dist = -8)
    { 0x0044, -9 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0046, -10 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -10)
    { 0x004A, -7 },  // (First char = [0x004A, J], Second char = [0x002E, .], Kerning dist = -7)
    { 0x004F, -6 },  // (First char = [0x004F, O], Second char = [0x002E, .], Kerning dist = -6)
    { 0x0050, -22 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -22)
    { 0x0051, -6 },  // (First char = [0x0051, Q], Second char = [0x002E, .], Kerning dist = -6)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0056, -15 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -15)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0058,  4 },  // (First char = [0x0058, X], Second char = [0x002E, .], Kerning dist = 4)
    { 0x0059, -13 },  // (First char = [0x0059, Y], Second char = [0x002E, .], Kerning dist = -13)
    { 0x0066, -9 },  // (First char = [0x0066, f], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0072, -11 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -11)
    { 0x0076, -9 },  // (First char = [0x0076, v], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0077, -7 },  // (First char = [0x0077, w], Second char = [0x002E, .], Kerning dist = -7)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x002E, .], Kerning dist = -8)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x003F, ?], Kerning dist = -7)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x003F, ?], Kerning dist = 4)
    { 0x0074, -4 },  // (First char = [0x0074, t], Second char = [0x003F, ?], Kerning dist = -4)
    { 0x0079, -5 },  // (First char = [0x0079, y], Second char = [0x003F, ?], Kerning dist = -5)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0046, -9 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -9)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004C,  4 },  // (First char = [0x004C, L], Second char = [0x0041, A], Kerning dist = 4)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0050, -11 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -10 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -10)
    { 0x0055, -3 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -8)
    { 0x0057, -5 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0043, C], Kerning dist = -4)
    { 0x004B, -6 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -6)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -6)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0047, G], Kerning dist = -4)
    { 0x004B, -6 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -6)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -4)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -6)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0041,  6 },  // (First char = [0x0041, A], Second char = [0x004A, J], Kerning dist = 6)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -4)
    { 0x004A, -4 },  // (First char = [0x004A, J], Second char = [0x004A, J], Kerning dist = -4)
    { 0x004B,  6 },  // (First char = [0x004B, K], Second char = [0x004A, J], Kerning dist = 6)
    { 0x004C,  7 },  // (First char = [0x004C, L], Second char = [0x004A, J], Kerning dist = 7)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0050, -9 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -9)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -8)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -5)
    { 0x0058,  6 },  // (First char = [0x0058, X], Second char = [0x004A, J], Kerning dist = 6)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -4)
    { 0x005A,  6 },  // (First char = [0x005A, Z], Second char = [0x004A, J], Kerning dist = 6)
    { 0x0063,  5 },  // (First char = [0x0063, c], Second char = [0x004A, J], Kerning dist = 5)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x004F, O], Kerning dist = -2)
    { 0x004B, -6 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -6)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -5)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -6)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0043, -4 },  // (First char = [0x0043, C], Second char = [0x0051, Q], Kerning dist = -4)
    { 0x004B, -6 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -6)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -5)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = -6)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0041, -10 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -10)
    { 0x0044, -6 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -6)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0054, T], Kerning dist = 1)
    { 0x004C, -8 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -8)
    { 0x004F, -6 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -6)
    { 0x0051, -4 },  // (First char = [0x0051, Q], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0054,  3 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = 3)
    { 0x0056,  3 },  // (First char = [0x0056, V], Second char = [0x0054, T], Kerning dist = 3)
    { 0x0057,  3 },  // (First char = [0x0057, W], Second char = [0x0054, T], Kerning dist = 3)
    { 0x0058,  2 },  // (First char = [0x0058, X], Second char = [0x0054, T], Kerning dist = 2)
    { 0x0059,  3 },  // (First char = [0x0059, Y], Second char = [0x0054, T], Kerning dist = 3)
    { 0x005A,  3 },  // (First char = [0x005A, Z], Second char = [0x0054, T], Kerning dist = 3)
    { 0x0063, -7 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -7)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -2)
    { 0x0041, -8 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -8)
    { 0x004C, -8 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -8)
    { 0x0054,  3 },  // (First char = [0x0054, T], Second char = [0x0056, V], Kerning dist = 3)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -5)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0050,  3 },  // (First char = [0x0050, P], Second char = [0x0057, W], Kerning dist = 3)
    { 0x0054,  3 },  // (First char = [0x0054, T], Second char = [0x0057, W], Kerning dist = 3)
    { 0x0044, -4 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -4)
    { 0x004B,  2 },  // (First char = [0x004B, K], Second char = [0x0058, X], Kerning dist = 2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0041, -10 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -10)
    { 0x0042, -4 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x004C, -9 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -9)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x0059, Y], Kerning dist = 2)
    { 0x0063, -5 },  // (First char = [0x0063, c], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0041,  4 },  // (First char = [0x0041, A], Second char = [0x005A, Z], Kerning dist = 4)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -3)
    { 0x004B,  3 },  // (First char = [0x004B, K], Second char = [0x005A, Z], Kerning dist = 3)
    { 0x004C,  4 },  // (First char = [0x004C, L], Second char = [0x005A, Z], Kerning dist = 4)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -3)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0046, -5 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -5)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -14)
    { 0x0056, -10 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -10)
    { 0x0057, -5 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -5)
    { 0x0059, -13 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -13)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0062, b], Kerning dist = 1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x0063, c], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0063, c], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x0064, d], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0064, d], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0066, f], Kerning dist = 1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0066, f], Kerning dist = -6)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0066, f], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x0066, f], Kerning dist = 3)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x0067, g], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0067, g], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0068, h], Kerning dist = 1)
    { 0x0067,  3 },  // (First char = [0x0067, g], Second char = [0x006A, j], Kerning dist = 3)
    { 0x006A,  2 },  // (First char = [0x006A, j], Second char = [0x006A, j], Kerning dist = 2)
    { 0x0071,  7 },  // (First char = [0x0071, q], Second char = [0x006A, j], Kerning dist = 7)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -12)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x006D, m], Kerning dist = -5)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -9)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -12)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -5)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -9)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -12)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -5)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -9)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0050, -5 },  // (First char = [0x0050, P], Second char = [0x0071, q], Kerning dist = -5)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x0071, q], Kerning dist = -14)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -9)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0071, q], Kerning dist = -3)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -12)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -12)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -5)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -9)
    { 0x0054, -10 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -10)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -4)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -9)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0073, s], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0074, t], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0074, t], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0074, t], Kerning dist = 2)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x0074, t], Kerning dist = 4)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -12)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -5)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -9)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -7)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -7)
    { 0x0066,  3 },  // (First char = [0x0066, f], Second char = [0x0076, v], Kerning dist = 3)
    { 0x0072,  6 },  // (First char = [0x0072, r], Second char = [0x0076, v], Kerning dist = 6)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -2)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -4)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -4)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -8)
    { 0x0066,  3 },  // (First char = [0x0066, f], Second char = [0x0077, w], Kerning dist = 3)
    { 0x0072,  6 },  // (First char = [0x0072, r], Second char = [0x0077, w], Kerning dist = 6)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -12)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x0078, x], Kerning dist = 1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x0078, x], Kerning dist = 4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004B, -6 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -6)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -5)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -8)
    { 0x005A, -4 },  // (First char = [0x005A, Z], Second char = [0x0079, y], Kerning dist = -4)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0079, y], Kerning dist = 2)
    { 0x0072,  6 },  // (First char = [0x0072, r], Second char = [0x0079, y], Kerning dist = 6)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -9)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x007A, z], Kerning dist = 3)
};
